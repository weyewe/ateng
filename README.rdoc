The problem: keeping CoGS (cost of goods sold) 

FIFO method ( first in first out )

Every Stock coming into the system:  one stock_entry 

Problematic condition: update activity. Example case: purchase and receival of stocks (5 items @20,000 each). Then,
it all of these items is used up. However, the data entry found out that the quantity inputted is wrong (take note, we 
have used up all the stock in this stock_entry). 

Case 1: less item

Instead of 5 items, there are only 3 items coming in @20,000 each. So, the 2 extra will be taken from another available stock_entry. However, after inputting 3 items, it is found out that there are actually 5. So, we will update the quantity 
to 5. However, it means that there are 2 unused items @20,000 each. 


Case 2: more item 

Just create as if there are more unused items 


For the receival, those 2 cases are the available case. How about other case?  SalesReturn 

1. By doing sales return, we are cancelling the usage. 

Total remaining of stock entries: initial quantity - usage + return 

2. If they change the stock return?



What is the use of stock_entry? to keep track of the inventory price (total price). Idea: sales return is just the same 
as if we are buying back from the customer => Create a new stock_entry. Second question: at what price level? What if the sales_return is composed from 2 different stock_entries? At the average_cost? maybe yes.  

